import { Handler } from 'aws-lambda';
import { connectToDatabase, Scan, Organization, ScanTask} from '../models';
import ECSClient from './ecs-client';
import {sendEmail} from '../api/helpers';
import S3Client from './s3-client'
import {list_reports} from '../api/reports'
import { SCAN_SCHEMA } from '../api/scans';
import getScanOrganizations from './helpers/getScanOrganizations';

 class Notifications {
  ecs: ECSClient;
  existingReports: number;
  organizations: Organization [];
  scans: Scan[];
  lastNotified: Date;

  constructor() {}

  async initialize({
    existingReports,
    organizations,
    scans,
    lastNotified

  }: {
    existingReports: number;
    organizations: Organization [];
    scans: Scan[],
    lastNotified: Date;
  }) {
    this.ecs = new ECSClient();
    this.existingReports = existingReports;
    this.organizations = organizations;
    this.scans = scans;
    this.lastNotified = lastNotified;
  }

}



export const handler: Handler<Notifications> = async (
  event: Notifications
  ) => {
    await connectToDatabase();
    console.log('Running notifications check...')
  
    
  };
  

  const sendReportEmail = async (email: string, organization?: Organization) => {
  
    await sendEmail(
      email,
      'New Report Available',
      `Hi there,
  
  The latest report for ${
        organization?.name ? `is now available on ` : ''
      }Crossfeed. To view the report, sign on at ${
        process.env.FRONTEND_DOMAIN
      }
  
  Crossfeed access instructions:
  
  For more information on using Crossfeed, view the Crossfeed user guide at https://docs.crossfeed.cyber.dhs.gov/user-guide/quickstart/. 
  
  If you encounter any difficulties, please feel free to reply to this email (or send an email to ${
        process.env.CROSSFEED_SUPPORT_EMAIL_REPLYTO
      }).`
    );
  };